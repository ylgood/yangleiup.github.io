(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{291:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"react生命周期有哪些，16版本生命周期发生了哪些变化？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react生命周期有哪些，16版本生命周期发生了哪些变化？","aria-hidden":"true"}},[t._v("#")]),t._v(" React生命周期有哪些，16版本生命周期发生了哪些变化？")]),t._v(" "),s("ul",[s("li",[t._v("15生命周期\n"),s("ul",[s("li",[t._v("初始化阶段\n"),s("ul",[s("li",[t._v("constructor 构造函数")]),t._v(" "),s("li",[t._v("getDefaultProps props默认值")]),t._v(" "),s("li",[t._v("getInitialState state默认值")])])]),t._v(" "),s("li",[t._v("挂载阶段\n"),s("ul",[s("li",[t._v("componentWillMount 组件初始化渲染前调用")]),t._v(" "),s("li",[t._v("render 组件渲染")]),t._v(" "),s("li",[t._v("componentDidMount组件挂载到 DOM后调用")])])]),t._v(" "),s("li",[t._v("更新阶段\n"),s("ul",[s("li",[t._v("componentWillReceiveProps 组件将要接收新 props前调用")]),t._v(" "),s("li",[t._v("shouldComponentUpdate 组件是否需要更新")]),t._v(" "),s("li",[t._v("componentWillUpdate 组件更新前调用")]),t._v(" "),s("li",[t._v("render 组件渲染")]),t._v(" "),s("li",[t._v("componentDidUpdate 组件更新后调用")])])]),t._v(" "),s("li",[t._v("卸载阶段\n"),s("ul",[s("li",[t._v("componentWillUnmount 组件卸载前调用")])])])])]),t._v(" "),s("li",[t._v("16生命周期\n"),s("ul",[s("li",[t._v("初始化阶段\n"),s("ul",[s("li",[t._v("constructor 构造函数")]),t._v(" "),s("li",[t._v("getDefaultProps props默认值")]),t._v(" "),s("li",[t._v("getInitialState state默认值")])])]),t._v(" "),s("li",[t._v("挂载阶段\n"),s("ul",[s("li",[t._v("static getDerivedStateFromProps(props,state)")]),t._v(" "),s("li",[t._v("render 组件渲染")]),t._v(" "),s("li",[t._v("componentDidMount组件挂载到 DOM后调用")])])]),t._v(" "),s("li",[t._v("更新阶段\n"),s("ul",[s("li",[t._v("static getDerivedStateFromProps(props,state)")]),t._v(" "),s("li",[t._v("shouldComponentUpdate 组件是否需要更新")]),t._v(" "),s("li",[t._v("componentWillUpdate 组件更新前调用")]),t._v(" "),s("li",[t._v("render 组件渲染")]),t._v(" "),s("li",[t._v("getSnapshotBeforeUpdate(prevProps,prevState)")]),t._v(" "),s("li",[t._v("componentDidUpdate 组件更新后调用")])])]),t._v(" "),s("li",[t._v("卸载阶段\n"),s("ul",[s("li",[t._v("componentWillUnmount 组件卸载前调用")])])]),t._v(" "),s("li",[t._v("错误处理\n"),s("ul",[s("li",[t._v("componentDidCatch")])])])])])]),t._v(" "),s("h2",{attrs:{id:"setstate是同步的还是异步的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate是同步的还是异步的？","aria-hidden":"true"}},[t._v("#")]),t._v(" setState是同步的还是异步的？")]),t._v(" "),s("p",[t._v("生命周期和合成事件中")]),t._v(" "),s("p",[t._v("在 React的生命周期和合成事件中， React仍然处于他的更新机制中，这时无论调用多少次 setState，都会不会立即执行更新，而是将要更新的·存入 "),s("code",[t._v("_pendingStateQueue")]),t._v("，将要更新的组件存入 "),s("code",[t._v("dirtyComponent")]),t._v("。")]),t._v(" "),s("p",[t._v("当上一次更新机制执行完毕，以生命周期为例，所有组件，即最顶层组件 didmount后会将批处理标志设置为 false。这时将取出 dirtyComponent中的组件以及 _pendingStateQueue中的 state进行更新。这样就可以确保组件不会被重新渲染多次。")]),t._v(" "),s("h2",{attrs:{id:"diff-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-简介","aria-hidden":"true"}},[t._v("#")]),t._v(" Diff 简介")]),t._v(" "),s("blockquote",[s("p",[t._v("做 Diff 的目的就是为了复用节点。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("TextNode(包含字符串和数字)")])]),t._v(" "),s("li",[s("p",[t._v("单个 React Element(通过该节点是否有 $$typeof 区分)")])]),t._v(" "),s("li",[s("p",[t._v("数组")])]),t._v(" "),s("li",[s("p",[t._v("可迭代的 children，跟数组的处理方式差不多")])]),t._v(" "),s("li",[s("p",[t._v("react 的 diff 算法是从 reconcileChildren 开始的")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildren")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Fiber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Fiber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nextChildren"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderExpirationTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ExpirationTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mountChildFibers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      nextChildren"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      renderExpirationTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildFibers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      workInProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      nextChildren"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      renderExpirationTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("p",[t._v("reconcileChildren 只是一个入口函数，如果首次渲染，current 空 null，就通过 mountChildFibers 创建子节点的 Fiber 实例。如果不是首次渲染，就调用 reconcileChildFibers去做 diff，然后得出 effect list。")]),t._v(" "),s("p",[t._v("接下来再看看 mountChildFibers 和 reconcileChildFibers 有什么区别：")])])}),[],!1,null,null,null);n.default=e.exports}}]);